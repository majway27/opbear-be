AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Optimistic Bearings Application
Globals:
  Function:
    Runtime: python3.6
    Timeout: 20
    Environment:
      Variables:    
        DeployBucket: opbearbe-deploy
Parameters: 
  LambdaFunctionNameValue: 
    Type: String
    Default: setuplambda
    AllowedValues: 
      - setuplambda
    Description: Lambda Name
  LambdaFunctionProdVersionValue: 
    Type: String
    Default: $LATEST
    Description: Lambda Prod Version "Number".  Used in CF template to point lambda version, manage env specific env vars.  Typed as string to allow for special "$LATEST" version.
Resources:
  OBCognitoUserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: OBCogUP
      AutoVerifiedAttributes: 
        - email
      Schema:
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: false
        - Name: email
          AttributeDataType: String
          Mutable: false
          Required: true
        - Name: phone_number
          AttributeDataType: String
          Mutable: false
          Required: false
  OBCognitoUserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
        ClientName: myApp
        GenerateSecret: false
        UserPoolId: !Ref OBCognitoUserPool
  OBCognitoIdPool:
    Type: "AWS::Cognito::IdentityPool"
    Properties:
      IdentityPoolName: !Ref AWS::StackName
      CognitoIdentityProviders: 
        -
          ClientId: !Ref OBCognitoUserPoolClient
          ProviderName: !GetAtt OBCognitoUserPool.ProviderName
      AllowUnauthenticatedIdentities: false
  OBListsTableTest: 
    Type: "AWS::DynamoDB::Table"
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "uid"
          AttributeType: "S"
        - 
          AttributeName: "listid"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "uid"
          KeyType: "HASH"
        - 
          AttributeName: "listid"
          KeyType: "RANGE"
      ProvisionedThroughput: 
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"
      TableName: "test.2.ob.lists"
  OBListsTableProd: 
    Type: "AWS::DynamoDB::Table"
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: "uid"
          AttributeType: "S"
        - 
          AttributeName: "listid"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "uid"
          KeyType: "HASH"
        - 
          AttributeName: "listid"
          KeyType: "RANGE"
      ProvisionedThroughput: 
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"
      TableName: "prod.2.ob.lists"
  OBLambdaSetup:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_function.lambda_handler
      Policies: AmazonDynamoDBFullAccess
      FunctionName: !Ref LambdaFunctionNameValue
      Environment:
        Variables:
          TABLE_NAME: !Ref OBListsTableProd
      Events:
        ProxyApiTestSetupListGet:
          Type: Api
          Properties:
            RestApiId: !Ref OBApi
            Path: /test/setup/list
            Method: GET
        ProxyApiProdSetupListGet:
          Type: Api
          Properties:
            RestApiId: !Ref OBApi
            Path: /setup/list
            Method: GET
        ProxyApiTestSetupListPost:
          Type: Api
          Properties:
            RestApiId: !Ref OBApi
            Path: /test/setup/list
            Method: POST
        ProxyApiProdSetupListPost:
          Type: Api
          Properties:
            RestApiId: !Ref OBApi
            Path: /setup/list
            Method: POST
        ProxyApiTestSetupListByIdDelete:
          Type: Api
          Properties:
            RestApiId: !Ref OBApi
            Path: /test/setup/list/{listid}
            Method: DELETE
        ProxyApiProdSetupListByIdDelete:
          Type: Api
          Properties:
            RestApiId: !Ref OBApi
            Path: /setup/list/{listid}
            Method: DELETE
        ProxyApiTestSetupListByIdGet:
          Type: Api
          Properties:
            RestApiId: !Ref OBApi
            Path: /test/setup/list/{listid}
            Method: GET
        ProxyApiProdSetupListByIdGet:
          Type: Api
          Properties:
            RestApiId: !Ref OBApi
            Path: /setup/list/{listid}
            Method: GET
        ProxyApiTestSetupListByIdPut:
          Type: Api
          Properties:
            RestApiId: !Ref OBApi
            Path: /test/setup/list/{listid}
            Method: PUT
        ProxyApiProdSetupListByIdPut:
          Type: Api
          Properties:
            RestApiId: !Ref OBApi
            Path: /setup/list/{listid}
            Method: PUT
  OBLambdaVersionRolling:
    Type: "AWS::Lambda::Version"
    Properties:     
      Description : Rolling Version For Dev Promotion         
      FunctionName : !Ref OBLambdaSetup
  OBLambdaSetupProdAlias:
    Type: "AWS::Lambda::Alias"
    Properties:     
      Description: Prod Lambda Version Link         
      FunctionName: !Ref OBLambdaSetup
      #FunctionVersion: '$LATEST' via cf param default value.  For first deploy otherwise deploy will fail for missing version.
      FunctionVersion: !Ref LambdaFunctionProdVersionValue
      Name: prod
  OBApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: v1
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: s3://opbearbe-deploy/swagger.json
  OBDeployment: 
    Type: "AWS::ApiGateway::Deployment"
    Properties: 
      RestApiId: !Ref OBApi
      Description: "My OB deployment"
      StageName: "DummyStage"
  OBStageV2:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      StageName: v2
      Description: Auth Test Stage
      RestApiId: !Ref OBApi
      DeploymentId: !Ref OBDeployment
  OBLambdaSetupInvokePermission:
    # Create lambda invoke permissions for prod alias, sam local stuff above only handles dev/live via AutoPublishAlias: live
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: 'setuplambda:prod'
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      # Incoming API GW method(s)
      SourceArn: !Join
      - ''
      - - 'arn:aws:execute-api:'
        - !Ref 'AWS::Region'
        - ':'
        - !Ref 'AWS::AccountId'
        - ':'
        - !Ref OBApi
        - '/*/*/*/*'
  OBCognitoIdPoolAuthedRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Federated: 
                - "cognito-identity.amazonaws.com"
            Action: 
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: 
                - !Ref OBCognitoIdPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr:
                - "authenticated"
      Path: "/"
      Policies: 
        - 
          PolicyName: "OBCognitoIdPoolAuthedPolicy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Effect: "Allow"
                Action: "execute-api:Invoke"
                Resource: 
                - !Join [ "/", [!Join [ ":", [ "arn:aws:execute-api",!Ref 'AWS::Region',!Ref 'AWS::AccountId',!Ref OBApi]], "*/GET/*"]]
                - !Join [ "/", [!Join [ ":", [ "arn:aws:execute-api",!Ref 'AWS::Region',!Ref 'AWS::AccountId',!Ref OBApi]], "*/POST/*"]]
                - !Join [ "/", [!Join [ ":", [ "arn:aws:execute-api",!Ref 'AWS::Region',!Ref 'AWS::AccountId',!Ref OBApi]], "*/DELETE/*"]]
              - 
                Effect: "Allow"
                Action: 
                - "mobileanalytics:PutEvents"
                Resource: "*"
  OBCognitoIdPoolAuthedRoleAttach:
    Type: "AWS::Cognito::IdentityPoolRoleAttachment"
    Properties:
      IdentityPoolId: !Ref OBCognitoIdPool
      Roles: 
        authenticated: !GetAtt OBCognitoIdPoolAuthedRole.Arn
Outputs:
  ApiUrl:
    Description: URL of your API endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref OBApi
        - '.execute-api.'
        - !Ref 'AWS::Region'
        - '.amazonaws.com/v2'
  RestApiId:
    Description: API Gateway API ID
    Value: !Ref OBApi      
  LamdbaFunction:
    Description: Lambda Function
    Value: !Ref OBLambdaSetup
  CognitoIdentityPool:
    Description: Cognito Identity Pool
    Value: !Ref OBCognitoIdPool
  CognitoUserPool:
    Description: Cognito User Pool
    Value: !Ref OBCognitoUserPool
  CognitoUserPoolClient:
    Description: Cognito User Pool App
    Value: !Ref OBCognitoUserPoolClient
  OBCognitoIdPoolAuthedRoleOutput:
    Description: Cognito Identity Pool IAM Authed Role
    Value: !Ref OBCognitoIdPoolAuthedRole
  DDB:
    Description: DynamoDB Test Table
    Value: !Ref OBListsTableTest